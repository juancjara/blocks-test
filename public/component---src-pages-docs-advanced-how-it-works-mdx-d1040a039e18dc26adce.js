(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"55AF":function(e){e.exports=JSON.parse('{"name":"blocks-ui","main":"dist/blocks-ui.cjs.js","module":"dist/blocks-ui.esm.js","version":"0.0.79","license":"MIT","repository":"blocks/blocks","dependencies":{"@babel/helper-plugin-utils":"^7.10.3","@babel/plugin-syntax-jsx":"^7.10.1","@babel/plugin-transform-react-jsx":"^7.10.3","@babel/standalone":"^7.10.3","@babel/template":"^7.10.3","@babel/traverse":"^7.10.3","@babel/types":"^7.10.3","@blocks/react":"^0.0.64","@blocks/react-beautiful-dnd":"^12.2.1","@emotion/cache":"^10.0.29","@emotion/core":"10.0.28","@mdx-js/react":"1.6.6","@monaco-editor/react":"^3.3.2","@reach/tabs":"^0.10.5","@theme-ui/components":"0.3.1","@theme-ui/presets":"0.3.0","@theme-ui/style-guide":"^0.3.0","chroma-js":"^2.1.0","interpolate-range":"^2.1.0","lodash.merge":"^4.6.2","prettier":"2.0.5","property-controls":"^0.0.60","react-color":"^2.18.1","react-feather":"^2.0.8","react-loadable":"^5.5.0","react-merge-refs":"^1.0.0","reakit":"^1.1.1","theme-ui":"0.3.1","tinycolor2":"^1.4.1"},"devDependencies":{"@babel/cli":"7.10.3","@babel/core":"7.10.3","@babel/preset-env":"7.10.3","@babel/preset-react":"7.10.1","jest":"26.1.0","react":"16.13.1","react-dom":"16.13.1"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"}}')},Bl7J:function(e,t,n){"use strict";var r=n("2A+t"),o=n("MXbp"),a=n("qKvR"),l=n("izhR"),c=n("Wbzz"),i=(n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("V+eJ"),n("ioFf"),n("91GP"),n("q1tI")),s=n.n(i);function b(){return(b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=Object(i.forwardRef)((function(e,t){var n=e.color,r=void 0===n?"currentColor":n,o=e.size,a=void 0===o?24:o,l=u(e,["color","size"]);return s.a.createElement("svg",b({ref:t,xmlns:"http://www.w3.org/2000/svg",width:a,height:a,viewBox:"0 0 24 24",fill:"none",stroke:r,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},l),s.a.createElement("path",{d:"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"}))}));p.displayName="GitHub";var d=p;function m(){return(m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function h(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var O=Object(i.forwardRef)((function(e,t){var n=e.color,r=void 0===n?"currentColor":n,o=e.size,a=void 0===o?24:o,l=h(e,["color","size"]);return s.a.createElement("svg",m({ref:t,xmlns:"http://www.w3.org/2000/svg",width:a,height:a,viewBox:"0 0 24 24",fill:"none",stroke:r,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},l),s.a.createElement("path",{d:"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"}))}));O.displayName="Twitter";var f=O;function j(){return(j=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function g(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var v=Object(i.forwardRef)((function(e,t){var n=e.color,r=void 0===n?"currentColor":n,o=e.size,a=void 0===o?24:o,l=g(e,["color","size"]);return s.a.createElement("svg",j({ref:t,xmlns:"http://www.w3.org/2000/svg",width:a,height:a,viewBox:"0 0 24 24",fill:"none",stroke:r,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},l),s.a.createElement("path",{d:"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"}),s.a.createElement("polyline",{points:"22,6 12,13 2,6"}))}));v.displayName="Mail";var k=v,x=n("55AF"),y=n("i4fA"),w=n("zPM8"),N=n("vrFN"),S=x.version;t.a=function(e){var t=e.children,n=e._frontmatter,i=(n=void 0===n?{}:n).title,s=n.noNav,b=n.showNewsletter;return Object(r.c)(o.b.root,null,Object(r.c)(N.a,{title:i}),Object(r.c)(a.b,{styles:{"*":{boxSizing:"border-box"},body:{margin:0},img:{maxWidth:"100%"}}}),Object(r.c)(l.Box,{sx:{display:"grid",minHeight:"100vh",gridTemplateAreas:['"header" "nav" "main" "toc" "footer"','"header header header" "nav main toc" "footer footer footer"'],gridTemplateColumns:["1fr","240px 1fr 240px"],gridTemplateRows:["min-content min-content 1fr min-content min-content","min-content 1fr min-content"]}},Object(r.c)(l.Box,{as:"header",sx:{gridArea:"header",borderBottom:"1px solid",borderColor:"border",py:2,px:3,display:"flex",aligntItems:"center",justifyContent:"space-between"}},Object(r.c)(c.Link,{to:"/",sx:{textDecoration:"none",color:"inherit",display:"flex",alignItems:"center"}},Object(r.c)("img",{src:"https://user-images.githubusercontent.com/1424573/61592179-e0fda080-ab8c-11e9-9109-166cc7c86b43.png",alt:"blocks logo",width:"32",sx:{verticalAlign:"middle",ml:"-4px",mr:2}}),"Blocks",Object(r.c)("span",{sx:{fontSize:0,mt:"2px",ml:2}},"v",S)),Object(r.c)("div",{sx:{display:"flex",alignItems:"center",verticalAlign:"middle"}},Object(r.c)("a",{href:"https://github.com/blocks/blocks","aria-label":"Github",target:"_blank",rel:"noopener noreferrer",sx:{mt:"5px",color:"inherit"}},Object(r.c)(d,{size:18})),Object(r.c)("a",{href:"https://twitter.com/blocks_ui","aria-label":"Twitter",target:"_blank",rel:"noopener noreferrer",sx:{mt:"5px",color:"inherit",ml:3}},Object(r.c)(f,{size:18})),Object(r.c)("a",{href:"/newsletter","aria-label":"Newsletter",sx:{mt:"5px",color:"inherit",ml:3,pl:"1px"}},Object(r.c)(k,{size:18})))),Object(r.c)(l.Box,{as:"main",sx:{gridArea:"main"}},Object(r.c)(l.Container,{sx:{px:3,py:[3,4,4]}},t,b?Object(r.c)(w.a,null):null)),Object(r.c)(l.Box,{as:"aside",sx:{gridArea:"nav",px:3,pt:[3,4],ul:{listStyle:"none",p:0,m:0,mt:[0,"10px"]},li:{fontSize:2,fontWeight:"bold",mb:2,"& ul":{ml:2,mt:2,mb:3},"& li":{fontWeight:"normal",mb:0}},a:{color:"inherit",textDecoration:"none","&:hover, &:focus":{color:"primary"}}}},s?null:Object(r.c)(y.a,null)),Object(r.c)(l.Box,{as:"aside",sx:{gridArea:"toc"}}),Object(r.c)(l.Box,{as:"footer",sx:{gridArea:"footer",py:[3,5,6],mt:[3,4,5],backgroundColor:"text",color:"background"}},Object(r.c)(l.Container,{sx:{px:3,display:"flex",alignItems:"center",verticalAlign:"middle"}},Object(r.c)(c.Link,{to:"/"},Object(r.c)("img",{src:"https://user-images.githubusercontent.com/1424573/61592179-e0fda080-ab8c-11e9-9109-166cc7c86b43.png",alt:"blocks logo",width:"32",sx:{verticalAlign:"middle",mr:4}})),Object(r.c)("a",{href:"https://github.com/blocks/blocks","aria-label":"Github",target:"_blank",rel:"noopener noreferrer",sx:{mt:"5px",ml:"auto",color:"inherit"}},Object(r.c)(d,{size:18})),Object(r.c)("a",{href:"https://twitter.com/blocks_ui","aria-label":"Github",target:"_blank",rel:"noopener noreferrer",sx:{mt:"5px",color:"inherit",ml:3}},Object(r.c)(f,{size:18})),Object(r.c)("a",{href:"/newsletter","aria-label":"Newsletter",sx:{mt:"5px",color:"inherit",ml:3,pl:"1px"}},Object(r.c)(k,{size:18}))))))}},TZSu:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return b}));n("q1tI");var r=n("7ljp"),o=n("Bl7J");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c={title:"How it works"},i={_frontmatter:c},s=o.a;function b(e){var t=e.components,n=l(e,["components"]);return Object(r.b)(s,a({},i,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",null,"How it works"),Object(r.b)("p",null,"Blocks is a parser, transformer, and renderer/compiler."),Object(r.b)("p",null,"It's unique because it reads in valid, production-ready JSX code\nand treats the AST as its data structure. Information is ",Object(r.b)("em",{parentName:"p"},"queried"),"\nfrom the AST and then changes to the canvas ",Object(r.b)("em",{parentName:"p"},"transform")," the AST."),Object(r.b)("p",null,"It uses Babel and its plugin API for parsing and transforming.\nEvents that happen in the canvas are emitted and run corresponding\nplugins on the source code."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note"),": ",Object(r.b)("em",{parentName:"p"},"Blocks is still extremely alpha software so a wide array\nof optimizations and other enhancements are missing which includes\nmaintaining the source as the AST structure rather than a JSX string\nand maintaining an internal representation for rendering after the\nfirst inline function evaluation"),"."),Object(r.b)("h2",null,"Preparing the source code"),Object(r.b)("p",null,"Blocks essentially maintains two states of the source code internally.\nOne is a slight transform from the original source code with a UUID added.\nThis is used to determine what JSX elements to modify. The second state\nof source code is the transformed version which is used to render the\ncanvas."),Object(r.b)("h3",null,"Internal representation"),Object(r.b)("p",null,"The internal representation of the source code looks pretty similar to\nwhat was passed in. The only noticeable change is the addition of a\nUUID that's passed as a prop (",Object(r.b)("inlineCode",{parentName:"p"},"___uuid"),")."),Object(r.b)("h4",null,"Input"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"import React from 'react'\nimport Blocks from 'blocks-ui/components'\n\nexport default () => (\n  <Blocks.Root>\n    <h1>Hello, world!</h1>\n  </Blocks.Root>\n)\n")),Object(r.b)("h4",null,"Output"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"import React from 'react'\nimport Blocks from 'blocks-ui/components'\n\nexport default () => (\n  <Blocks.Root>\n    <h1 ___uuid=\"123abc\">Hello, world!</h1>\n  </Blocks.Root>\n)\n")),Object(r.b)("h3",null,"Renderable representation"),Object(r.b)("p",null,"The render transform takes the internal representation and\nthen does the following:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"converts JSX to function calls (using the Blocks pragma)"),Object(r.b)("li",{parentName:"ul"},"replaces ",Object(r.b)("inlineCode",{parentName:"li"},"Blocks.Root")," with a special ",Object(r.b)("inlineCode",{parentName:"li"},"BLOCKS_Root")," for drag and drop"),Object(r.b)("li",{parentName:"ul"},"injects the implementation of ",Object(r.b)("inlineCode",{parentName:"li"},"BLOCKS_Root")),Object(r.b)("li",{parentName:"ul"},"removes imports"),Object(r.b)("li",{parentName:"ul"},"rewrites the default export to be a ",Object(r.b)("inlineCode",{parentName:"li"},"BLOCKS_Container")," variable"),Object(r.b)("li",{parentName:"ul"},"rewrites all named exports to be variable declarations"),Object(r.b)("li",{parentName:"ul"},"wraps all blocks on the canvas in the draggable implementation")),Object(r.b)("h4",null,"Input"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"import React from 'react'\nimport Blocks from 'blocks-ui/components'\n\nexport default () => (\n  <Blocks.Root>\n    <h1 ___uuid=\"123abc\">Hello, world!</h1>\n  </Blocks.Root>\n)\n")),Object(r.b)("h4",null,"Output"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"TODO\n")),Object(r.b)("h2",null,"Rendering the canvas"),Object(r.b)("p",null,"After the transform for a renderable output, Blocks uses a\ncustom pragma, AST metadata, custom scope (including blocks\npassed to the editor) and inline function evaluation\nto render the canvas."),Object(r.b)("h3",null,"Pragma"),Object(r.b)("p",null,"Blocks uses its own custom pragma which is used when rendering\nto the canvas. This is used for handling the UUID, element\nselection, and styling based on selection/hover/focus state."),Object(r.b)("p",null,"It's a light wrapper around Theme UI's custom pragma. It's\nrough implementation looks something like:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-jsx"}),"export default elementSelectionHandler => (type, props, ...children) => {\n  // Grab the current selected element from context\n  const element = useElement() || {}\n\n  props = props || {}\n  const { ___uuid: id, sx = {} } = props\n  delete props.___uuid\n\n  const isCurrentElement = id && id === element.id\n\n  return jsx(\n    type,\n    {\n      ...props,\n      sx: {\n        ...sx,\n        boxShadow: isCurrentElement\n          ? 'inset 0px 0px 0px 2px #0079FF'\n          : sx.boxShadow\n      },\n      onClick: e => {\n        e.stopPropagation()\n        if (id) {\n          elementSelectionHandler(id)\n        }\n      }\n    },\n    ...children\n  )\n}\n")),Object(r.b)("h3",null,"Renderer"),Object(r.b)("p",null,"The renderer itself receives the transformed source code\nand the scope of the canvas and its Blocks. Then, it initializes\na function and evaluates it inline:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"const fn = new Function(\n  'React',\n  ...Object.keys(scope),\n  `${code};\n  return React.createElement(BLOCKS_Container)`\n)\n\nreturn fn(React, ...Object.values(scope))\n")),Object(r.b)("p",null,"This is wrapped up in a component so the API is nicer:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"<InlineRender scope={scope} code={transformedCode} theme={theme} />\n")),Object(r.b)("h3",null,"Querying element information"),Object(r.b)("p",null,"In addition to Babel transforms, Blocks needs to query information\nfrom the AST in order to query information about a selected element.\nBlocks uses information including:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"element name"),Object(r.b)("li",{parentName:"ul"},"parent UUID"),Object(r.b)("li",{parentName:"ul"},"child names and UUIDs"),Object(r.b)("li",{parentName:"ul"},"text (if all children are text nodes)")),Object(r.b)("p",null,"In order to achieve this, a Babel plugin is run to search for a\nJSX element with a matching UUID and then pulling information from\nthe node in the AST."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"{\n  JSXOpeningElement: path => {\n    const id = path.node.attributes.find(\n      // uuidName is the matching uuid property and it's equal to ___uuid\n      node => node && node.name && node.name.name === uuidName\n    )\n\n    if (!id || id.value.value !== elementId) {\n      return\n    }\n\n    const children = path.container.children || []\n    const hasElements = children.some(n => !t.isJSXText(n))\n\n    const element = {\n      id: elementId,\n      name: getElementName(path.node),\n      props: getElementProps(path.node.attributes),\n      parentId: getParentId(path)\n    }\n\n    // ...\n  }\n}\n")),Object(r.b)("p",null,"In addition to the current element, Blocks queries other metadata\nfrom the AST including imports, exports, and the Blocks for the\ncanvas."),Object(r.b)("p",null,"Queries are wrapped up into a ",Object(r.b)("inlineCode",{parentName:"p"},"queries")," module which can be used\nlike so:"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"queries.getCurrentElement(code, elementId)\n")),Object(r.b)("h2",null,"Returning new JSX"),Object(r.b)("p",null,"The new, modified JSX code is returned in an ",Object(r.b)("inlineCode",{parentName:"p"},"onChange")," event.\nIt takes the internal representation of the JSX and runs a\nBabel plugin to remove the UUID and any other Blocks metadata.\nThis results in"),Object(r.b)("h4",null,"Input"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"import React from 'react'\nimport Blocks from 'blocks-ui/components'\n\nexport default () => (\n  <Blocks.Root>\n    <h1\n      ___uuid=\"123abc\"\n      sx={{\n        color: 'tomato'\n      }}\n    >\n      Hello, world!\n    </h1>\n  </Blocks.Root>\n)\n")),Object(r.b)("h4",null,"Output"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"import React from 'react'\nimport Blocks from 'blocks-ui/components'\n\nexport default () => (\n  <Blocks.Root>\n    <h1 sx={{ color: 'tomato' }}>Hello, world!</h1>\n  </Blocks.Root>\n)\n")))}b.isMDXComponent=!0},i4fA:function(e,t,n){"use strict";var r=n("2A+t"),o=n("Wbzz"),a={textDecoration:"underline"};t.a=function(){return Object(r.c)("ul",null,Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/getting-started",activeStyle:a},"Getting started")),Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/blocks",activeStyle:a},"Blocks library")),Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/docs/controls",activeStyle:a},"Controls")),Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/docs/guides",activeStyle:a},"Guides"),Object(r.c)("ul",null,Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/docs/guides/write-a-custom-block",activeStyle:a},"Custom blocks")))),Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/about",activeStyle:a},"About")),Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/vision",activeStyle:a},"Vision")),Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/docs/advanced",activeStyle:a},"Advanced"),Object(r.c)("ul",null,Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/docs/advanced/how-it-works",activeStyle:a},"How it works")),Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/docs/advanced/transforms",activeStyle:a},"Transforms")),Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/docs/advanced/queries",activeStyle:a},"Queries")),Object(r.c)("li",null,Object(r.c)(o.Link,{to:"/docs/advanced/blocks-docs-generation",activeStyle:a},"Blocks docs generation")))))}}}]);
//# sourceMappingURL=component---src-pages-docs-advanced-how-it-works-mdx-d1040a039e18dc26adce.js.map
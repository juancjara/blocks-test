{"componentChunkName":"component---src-templates-block-js","path":"/blocks//button","result":{"data":{"block":{"id":"252f1bbd-424b-5644-9f36-d81929898451","displayName":"Button","src":"/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { ControlType, applyPropertyControls } from 'property-controls'\nimport { Button as ButtonMUI } from '@material-ui/core'\n\nconst Button = (props) => {\n  return <ButtonMUI {...props} />\n}\n\napplyPropertyControls(Button, {\n  children: {\n    type: ControlType.String\n  },\n  variant: {\n    title: 'Variant',\n    type: ControlType.Enum,\n    defaultValue: 'contained',\n    options: ['contained', 'outlined', 'text']\n  },\n  size: {\n    title: 'Size',\n    type: ControlType.Enum,\n    defaultValue: 'medium',\n    options: ['small', 'medium', 'large']\n  },\n  color: {\n    title: 'Color',\n    type: ControlType.Enum,\n    defaultValue: 'primary',\n    options: ['default', 'inherit', 'primary', 'secondary']\n  }\n})\n\nButton.usage = `\n  <Button variant='contained' color='primary'>button text</Button>\n`\n\nexport default Button\n","transformed":"const BLOCKS_Container = () => jsx(Button, {\n  variant: \"contained\",\n  color: \"primary\"\n}, \"button text\");\n\nconst BLOCKS_Root = ({\n  children\n}) => {\n  return jsx(BLOCKS_Layout, null, jsx(BLOCKS_Droppable, {\n    droppableId: \"root\"\n  }, (provided, snapshot) => {\n    const allProps = Object.assign(provided.droppableProps, {\n      ref: provided.innerRef,\n      style: {\n        minHeight: '100%'\n      }\n    });\n    return React.createElement('div', allProps, children, provided.placeholder);\n  }));\n};"}},"pageContext":{"id":"252f1bbd-424b-5644-9f36-d81929898451","slug":"blocks//button"}}}